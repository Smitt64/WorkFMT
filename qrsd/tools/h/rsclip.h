// -------------------------------------------------------------------------------------------------
// 2012-04-16  Работа с буфером обмена
//             При работе через СП функциональность доступна посредством модуля rsextt.d32
//             Ограничения: при работе через СП действуют следующие ограничения на размер данных:
//             на передаваемые: 16384 байт
//             на принимаемые:   8192 байт

#ifndef _RSCLIP_H_
#define _RSCLIP_H_


#ifdef __cplusplus
extern "C" {
#endif

// -----------------------------------------------------------------------------
// Поместить данные в буфер обмена
// [in]  fmt  - формат данных (константы вида CF_ из WinUser.h). Для форматов CF_OEMTEXT/CF_TEXT
//              дополнительно будет установлен параметр CF_LOCALE с идентификатором текущей локали.
// [out] data - данные, помещаемые в буфер обмена.
// [in]  size - размер данных, помещаемых в буфер обмена. Если size равен 0, то считается,
//              что data содержит указатель на (const char *) и длина строки вычисляется автоматически.
//              В остальных случаях должен содержать реальный размер помещаемых данных.
// [ret]      - возвращаемые значения:
//              0 - успех
//             -1 - общая ошибка (например, не реализована функциональсть)
//             -2 - размер данных превышает размер коммуникационного пакета
//              остальные значения представляют собой возвращаемые значения GetLastError.
_TOOLEXP int  RSSetClipboardData(int fmt, void *data, int size);

// -----------------------------------------------------------------------------
// Получить данные из буфера обмена
// [in]  fmt  - формат данных (константы вида CF_ из WinUser.h).
// [out] data - данные, помещаемые из буфера обмена.
// [in]  size - размер буфера data. Если size равен 0, то проверки на соответствие размеров не выполняются.
//              Если size задан явно, и размер данных в буфере обмена превышает size, в data будет скопировано
//              size - 1 байт, причём в последний байт будет записан 0-символ.
// [ret]      - возвращаемые значения:
//              0 - успех
//             -1 - общая ошибка (например, не реализована функциональсть)
//             -2 - размер данных превышает размер коммуникационного пакета
//              остальные значения представляют собой возвращаемые значения GetLastError.
_TOOLEXP int  RSGetClipboardData(int fmt, void **data, int size);

// -----------------------------------------------------------------------------
// Очистить буфер обмена
// [ret]      - возвращаемые значения:
//              0 - успех
//              остальные значения представляют собой возвращаемые значения GetLastError.
_TOOLEXP int  RSEmptyClipboard(void);

void AddClipboardProc(void);

#ifdef __cplusplus
}
#endif

#endif // _RSCLIP_H_

/* <-- EOF --> */